# ########################################################################
# Copyright 2019-2023 Advanced Micro Devices, Inc.
# ########################################################################

include:
  - project: 'amd/ci-templates'
    ref: main
    file:
      - /defaults.yaml
      - /deps-cmake.yaml
      - /deps-docs.yaml
      - /deps-rocm.yaml
      - /gpus-rocm.yaml
      - /rules.yaml

stages:
  - lint
  - build   # Tests if builds succeed (CMake)
  - test    # Tests if unit tests are passing (CTest)

variables:
  # Helper variables
  PACKAGE_DIR: $BUILD_DIR/package
  ROCPRIM_GIT_BRANCH: develop_stream

copyright-date:
  extends:
    - .deps:rocm
  stage: lint
  needs: []
  tags:
    - rocm-build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - cd $CI_PROJECT_DIR
    - git config --global --add safe.directory $CI_PROJECT_DIR
    - scripts/copyright-date/check-copyright.sh -v -d $CI_MERGE_REQUEST_DIFF_BASE_SHA

.cmake-latest:
  extends:
    - .deps:rocm
    - .deps:cmake-latest
  before_script:
    - !reference [".deps:rocm", before_script]
    - !reference [".deps:cmake-latest", before_script]

.cmake-minimum:
  extends:
    - .deps:rocm
    - .deps:cmake-minimum
  before_script:
    - !reference [".deps:rocm", before_script]
    - !reference [".deps:cmake-minimum", before_script]

.install-rocprim:
  script:
    - branch_name="$ROCPRIM_GIT_BRANCH"
    - if [ $CI_COMMIT_BRANCH == develop ] || [ $CI_COMMIT_BRANCH == master ]; then branch_name=$CI_COMMIT_BRANCH;
    - fi;
    - git clone -b $branch_name https://gitlab-ci-token:${CI_JOB_TOKEN}@${ROCPRIM_GIT_URL} $CI_PROJECT_DIR/rocPRIM
    - cmake
      -G Ninja
      -D CMAKE_CXX_COMPILER=hipcc
      -D CMAKE_BUILD_TYPE=Release
      -D BUILD_TEST=OFF
      -D BUILD_EXAMPLE=OFF
      -D ROCM_DEP_ROCMCORE=OFF
      -S $CI_PROJECT_DIR/rocPRIM
      -B $CI_PROJECT_DIR/rocPRIM/build
    - cd $CI_PROJECT_DIR/rocPRIM/build
    - cpack
      -G "DEB"
    - $SUDO_CMD dpkg -i rocprim*.deb

.build:common:
  stage: build
  extends:
    - .gpus:rocm-gpus
    - .rules:build
  tags:
    - rocm-build
  script:
    - !reference [.install-rocprim, script]
    # Setup env vars for testing
    - rng_seed_count=0; prng_seeds="0";
    - if [ $CI_COMMIT_BRANCH == develop_stream ] ; then rng_seed_count=3; prng_seeds="0 1000";
    - fi;
    # Build rocThrust
    - cmake
      -G Ninja
      -D CMAKE_CXX_COMPILER=hipcc
      -D CMAKE_BUILD_TYPE=Release
      -D BUILD_TEST=ON
      -D BUILD_EXAMPLES=ON
      -D BUILD_BENCHMARKS=ON
      -D AMDGPU_TARGETS=$GPU_TARGETS
      -D AMDGPU_TEST_TARGETS=$GPU_TARGETS
      -D RNG_SEED_COUNT=$rng_seed_count
      -D PRNG_SEEDS=$prng_seeds
      -S $CI_PROJECT_DIR
      -B $CI_PROJECT_DIR/build
    - cmake --build $CI_PROJECT_DIR/build
  artifacts:
    paths:
    - $CI_PROJECT_DIR/build/test/*
    - $CI_PROJECT_DIR/build/testing/*
    - $CI_PROJECT_DIR/build/deps/*
    - $CI_PROJECT_DIR/build/CMakeCache.txt
    - $CI_PROJECT_DIR/build/CTestTestfile.cmake
    - $CI_PROJECT_DIR/build/.ninja_log
    exclude:
    - $CI_PROJECT_DIR/build/**/*.o
    expire_in: 2 weeks

build:cmake-latest:
  stage: build
  extends:
    - .cmake-latest
    - .build:common

build:cmake-minimum:
  stage: build
  extends:
    - .cmake-minimum
    - .build:common

build:package:
  stage: build
  extends:
    - .cmake-minimum
    - .rules:build
  tags:
    - rocm-build
  script:
    - !reference [.install-rocprim, script]
    - cmake
      -S $CI_PROJECT_DIR
      -B $PACKAGE_DIR
      -G Ninja
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_CXX_COMPILER=hipcc
    - cd $PACKAGE_DIR
    - cpack
      -G "DEB;ZIP"
  artifacts:
    paths:
      - $PACKAGE_DIR/rocthrust*.deb
      - $PACKAGE_DIR/rocthrust*.zip
    expire_in: 2 weeks

test:package:
  stage: test
  needs:
    - build:package
  extends:
    - .cmake-minimum
    - .rules:test
  tags:
    - rocm-build
  script:
    - !reference [.install-rocprim, script]
    - $SUDO_CMD dpkg -i $PACKAGE_DIR/rocthrust*.deb
    # Test install
    - cmake
      -S $CI_PROJECT_DIR/extra
      -B $CI_PROJECT_DIR/package_test
      -G Ninja
      -D CMAKE_CXX_COMPILER=hipcc
      -D CMAKE_BUILD_TYPE=Release
      -D ROCPRIM_ROOT=/opt/rocm/rocprim
    - cmake --build $CI_PROJECT_DIR/package_test
    # Remove rocPRIM and rocThrust
    - $SUDO_CMD dpkg -r rocthrust-dev
    - $SUDO_CMD dpkg -r rocprim-dev

test:doc:
  stage: test
  extends:
    - .build:docs
    - .rules:test

test:
  stage: test
  extends:
    - .cmake-minimum
    - .rules:test
    - .gpus:rocm
  needs:
    - build:cmake-minimum
  script:
    - cd $CI_PROJECT_DIR/build
    - cmake
      -D CMAKE_PREFIX_PATH=/opt/rocm
      -P $CI_PROJECT_DIR/cmake/GenerateResourceSpec.cmake
    - cat ./resources.json
    - ctest
      --output-on-failure
      --repeat-until-fail 2
      --tests-regex $GPU_TARGET
      --resource-spec-file ./resources.json
      --parallel $PARALLEL_JOBS
